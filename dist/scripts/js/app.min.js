/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/js/enemyMoveHandling.js":
/*!*********************************************!*\
  !*** ./src/scripts/js/enemyMoveHandling.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enemyMoveHandling\": () => (/* binding */ enemyMoveHandling)\n/* harmony export */ });\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./service.js */ \"./src/scripts/js/service.js\");\n\r\n\r\nfunction enemyMoveHandling(inputGameData) {\r\n    let move = inputGameData['move']['move']\r\n    let storageMove = localStorage.getItem('move')\r\n    let isActivePlayerChanged = inputGameData['is_active_player_changed']\r\n    let activePlayer = inputGameData['active_player']\r\n    let activeUsername = inputGameData['players'][activePlayer]\r\n    let username = localStorage.getItem('username')\r\n\r\n    if (move && ((username !== activeUsername) ^ isActivePlayerChanged)) {\r\n        move = move.join(',')\r\n        if (storageMove !== move) {\r\n            let enemyMove = new _service_js__WEBPACK_IMPORTED_MODULE_0__.EnemyMove(inputGameData)\r\n            enemyMove.makeMove()\r\n            localStorage.setItem('move', move)\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/enemyMoveHandling.js?");

/***/ }),

/***/ "./src/scripts/js/gameData.js":
/*!************************************!*\
  !*** ./src/scripts/js/gameData.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameData\": () => (/* binding */ GameData)\n/* harmony export */ });\nclass GameData {\r\n\r\n    constructor(gameData) {\r\n        this.winner = gameData['winner']\r\n        this.possibleMoves = gameData['possible_moves']\r\n        this.activePlayer = gameData['active_player']\r\n\r\n        this.possibleMovesDOM = []\r\n        this.elements = {}\r\n\r\n        this.move = gameData['move']\r\n        this.elementsForEnemyMove = []\r\n    }\r\n\r\n    filling() {\r\n        this.possibleMoves.forEach(move => {\r\n            let checkerCoord = move[0].join()\r\n            let cellCoord = move[1].join()\r\n\r\n            let checkerClass = `.row_${move[0][0]}.column_${move[0][1]}`\r\n            let cellClass = `.cell_row_${move[1][0]}.cell_column_${move[1][1]}`\r\n\r\n            let checker = document.querySelector(checkerClass)\r\n            let cell = document.querySelector(cellClass)\r\n\r\n            let enemyCheckerClass = 0\r\n            let enemyCheckerCoord = 0\r\n            let enemyChecker = 0\r\n            if (move[2].length) {\r\n                enemyCheckerClass = `.row_${move[2][0]}.column_${move[2][1]}`\r\n                enemyCheckerCoord = move[2].join()\r\n                enemyChecker = document.querySelector(enemyCheckerClass)\r\n                this.elements[enemyCheckerCoord] = enemyChecker\r\n            }\r\n\r\n            this.possibleMovesDOM.push([checker, cell, enemyChecker])\r\n\r\n            this.elements[checkerCoord] = checker\r\n            this.elements[cellCoord] = cell\r\n        })\r\n    }\r\n\r\n    fillingForEnemyMove() {\r\n        let move = this.move['move']\r\n\r\n        let checkerClass = `.row_${move[0][0]}.column_${move[0][1]}`\r\n        let cellClass = `.cell_row_${move[1][0]}.cell_column_${move[1][1]}`\r\n\r\n        let checker = document.querySelector(checkerClass)\r\n        let cell = document.querySelector(cellClass)\r\n\r\n        this.elementsForEnemyMove.push(checker)\r\n        this.elementsForEnemyMove.push(cell)\r\n\r\n        let enemyCheckerClass = 0\r\n        let enemyChecker = 0\r\n        if (move[2].length) {\r\n            enemyCheckerClass = `.row_${move[2][0]}.column_${move[2][1]}`\r\n            enemyChecker = document.querySelector(enemyCheckerClass)\r\n            this.elementsForEnemyMove.push(enemyChecker)\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/gameData.js?");

/***/ }),

/***/ "./src/scripts/js/gameLoop.js":
/*!************************************!*\
  !*** ./src/scripts/js/gameLoop.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startGameLoop\": () => (/* binding */ startGameLoop)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./src/scripts/js/request.js\");\n/* harmony import */ var _enemyMoveHandling_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemyMoveHandling.js */ \"./src/scripts/js/enemyMoveHandling.js\");\n/* harmony import */ var _ownMoveHandling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ownMoveHandling.js */ \"./src/scripts/js/ownMoveHandling.js\");\n/* harmony import */ var _showWinner_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./showWinner.js */ \"./src/scripts/js/showWinner.js\");\n\r\n\r\n\r\n\r\n\r\nfunction startGameLoop(url) {\r\n    let currentUrl = url.replace('game', 'start')\r\n    localStorage.setItem('move', '');\r\n    (async function loop() {\r\n        let move = ''\r\n        let method = 'GET';\r\n        let winner = ''\r\n\r\n        while (true) {\r\n            let options = {\r\n                method: method,\r\n                url: currentUrl,\r\n                headers: '',\r\n                responseType: 'json',\r\n                params: move,\r\n            }\r\n            let inputGameData = await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.delay)(options)\r\n\r\n            ;(0,_enemyMoveHandling_js__WEBPACK_IMPORTED_MODULE_1__.enemyMoveHandling)(inputGameData)\r\n\r\n            winner = inputGameData['winner']\r\n            if (winner) {\r\n                (0,_showWinner_js__WEBPACK_IMPORTED_MODULE_3__.showWinner)(inputGameData)\r\n                break\r\n            }\r\n\r\n            move = await (0,_ownMoveHandling_js__WEBPACK_IMPORTED_MODULE_2__.ownMoveHandling)(inputGameData)\r\n\r\n        }\r\n    })()\r\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/gameLoop.js?");

/***/ }),

/***/ "./src/scripts/js/getUsername.js":
/*!***************************************!*\
  !*** ./src/scripts/js/getUsername.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUsername\": () => (/* binding */ getUsername)\n/* harmony export */ });\nfunction getUsername() {\r\n    let loginForm = document.querySelector('.form')\r\n    loginForm.addEventListener('submit', () => {\r\n        let formInputUsername = loginForm.getElementById('username')\r\n        let username = formInputUsername.value\r\n\r\n        localStorage.setItem('username', username)\r\n    })\r\n}\r\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/getUsername.js?");

/***/ }),

/***/ "./src/scripts/js/ownMoveHandling.js":
/*!*******************************************!*\
  !*** ./src/scripts/js/ownMoveHandling.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ownMoveHandling\": () => (/* binding */ ownMoveHandling)\n/* harmony export */ });\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./service.js */ \"./src/scripts/js/service.js\");\n\r\n\r\nasync function ownMoveHandling(inputGameData) {\r\n    let activePlayer = inputGameData['active_player']\r\n    let activeUsername = inputGameData['players'][activePlayer]\r\n    let username = localStorage.getItem('username')\r\n\r\n    if (username === activeUsername) {\r\n        let ownMove = new _service_js__WEBPACK_IMPORTED_MODULE_0__.Move(inputGameData)\r\n        return await ownMove.movePromise(ownMove)\r\n    } else {\r\n        return ''\r\n    }\r\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/ownMoveHandling.js?");

/***/ }),

/***/ "./src/scripts/js/request.js":
/*!***********************************!*\
  !*** ./src/scripts/js/request.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"delay\": () => (/* binding */ delay)\n/* harmony export */ });\nconst delay = options => {\r\n    return new Promise(function (resolve, reject) {\r\n        if (options.params) {\r\n            options.method = 'POST'\r\n        } else {\r\n            options.method = 'GET'\r\n        }\r\n        let timeout = 1000\r\n        if (options.method === 'POST') {\r\n            timeout = 500\r\n        }\r\n        var xhr = new XMLHttpRequest()\r\n        xhr.open(options.method, options.url)\r\n        xhr.responseType = 'json'\r\n        xhr.onload = function() {\r\n        if (xhr.status >= 200 && xhr.status <= 300) {\r\n            resolve(xhr.response)\r\n        } else {\r\n            reject({\r\n            status: xhr.status,\r\n            statusText: xhr.statusText\r\n            })\r\n        }\r\n        }\r\n        xhr.onerror = function () {\r\n        reject({\r\n            status: xhr.status,\r\n            statusText: xhr.statusText\r\n        })\r\n        }\r\n        if (options.headers) {\r\n            Object.keys(options.headers).forEach(function (key) {\r\n                xhr.setRequestHeader(key, options.headers[key])\r\n            })\r\n        }\r\n        var params = JSON.stringify(options.params)\r\n        setTimeout(() => {\r\n            xhr.send(params)\r\n        }, timeout)\r\n      })\r\n}\r\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/request.js?");

/***/ }),

/***/ "./src/scripts/js/scripts.js":
/*!***********************************!*\
  !*** ./src/scripts/js/scripts.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _waitingForSecondPlayer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waitingForSecondPlayer.js */ \"./src/scripts/js/waitingForSecondPlayer.js\");\n/* harmony import */ var _getUsername_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getUsername.js */ \"./src/scripts/js/getUsername.js\");\n\r\n\r\n\r\nlet url = window.location.href\r\n\r\nif (url.indexOf('login') !== -1) {\r\n    (0,_getUsername_js__WEBPACK_IMPORTED_MODULE_1__.getUsername)()\r\n} else if (url.indexOf('game') !== -1) {\r\n    (0,_waitingForSecondPlayer_js__WEBPACK_IMPORTED_MODULE_0__.waitingForSecondPlayer)(url)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/scripts.js?");

/***/ }),

/***/ "./src/scripts/js/service.js":
/*!***********************************!*\
  !*** ./src/scripts/js/service.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EnemyMove\": () => (/* binding */ EnemyMove),\n/* harmony export */   \"Move\": () => (/* binding */ Move)\n/* harmony export */ });\n/* harmony import */ var _gameData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameData.js */ \"./src/scripts/js/gameData.js\");\n\r\n\r\nclass Move {\r\n    constructor(inputGameData) {\r\n        this.gameData = new _gameData_js__WEBPACK_IMPORTED_MODULE_0__.GameData(inputGameData)\r\n        this.gameData.filling()\r\n    }\r\n\r\n    getActiveCheckers() {\r\n        let checkersSet = new Set()\r\n        let possibleMovesDOM = this.gameData.possibleMovesDOM\r\n        possibleMovesDOM.forEach(move => {\r\n            checkersSet.add(move[0])\r\n        })\r\n        return Array.from(checkersSet)\r\n    }\r\n\r\n    addRemoveActiveCheckersClass(checker, activeCheckers) {\r\n        checker.classList.toggle('active_checker')\r\n\r\n        activeCheckers.forEach(el => {\r\n            if (el !== checker) {\r\n                el.classList.remove('active_checker')\r\n            }\r\n        })\r\n    }\r\n\r\n    getActiveCells(checker) {\r\n        let possibleMovesDOM = this.gameData.possibleMovesDOM\r\n        let isActiveClassFound = checker.classList.value.includes('active_checker')\r\n        let activeCellsArr = []\r\n        let passiveCellsArr = []\r\n        possibleMovesDOM.forEach(move => {\r\n            if (move[0] === checker && isActiveClassFound) {\r\n                activeCellsArr.push(move[1])\r\n            } else {\r\n                passiveCellsArr.push(move[1])\r\n            }\r\n        })\r\n        passiveCellsArr = passiveCellsArr.filter(cell => !activeCellsArr.includes(cell))\r\n        return [activeCellsArr, passiveCellsArr]\r\n    }\r\n\r\n    addCellsActiveClass(activeCells) {\r\n        activeCells.forEach(el => {\r\n            el.classList.add('active_cell')\r\n        })\r\n    }\r\n\r\n    removeCellsActiveClass(passiveCells) {\r\n        passiveCells.forEach(el => {\r\n            el.classList.remove('active_cell')\r\n        })\r\n    }\r\n\r\n    getEnemyChecker(checker, cell) {\r\n        let possibleMovesDOM = this.gameData.possibleMovesDOM\r\n        let enemyChecker = 0\r\n        possibleMovesDOM.forEach(move => {\r\n            if (move[0] === checker && move[1] === cell) {\r\n                enemyChecker = move[2]\r\n            }\r\n        })\r\n        return enemyChecker\r\n    }\r\n\r\n    getMoveAndElements(checker, cell) {\r\n        let elements = this.gameData.elements\r\n        let enemyChecker = this.getEnemyChecker(checker, cell)\r\n        let enemyCoord = []\r\n        let checkerCoord = []\r\n        let cellCoord = []\r\n\r\n        for (let key in elements) {\r\n            let element = elements[key]\r\n            switch(element) {\r\n                case checker:\r\n                    checkerCoord = key.split(',').map(str => parseInt(str, 10))\r\n                    break\r\n                case cell:\r\n                    cellCoord = key.split(',').map(str => parseInt(str, 10))\r\n                    break\r\n                case enemyChecker:\r\n                    enemyCoord = key.split(',').map(str => parseInt(str, 10))\r\n                    break\r\n            }\r\n        }\r\n        return [[checkerCoord, cellCoord, enemyCoord], [checker, cell, enemyChecker]]\r\n    }\r\n\r\n    makeMove(move, elements) {\r\n        let activePlayer = this.gameData.activePlayer\r\n        let ownChecker = elements[0]\r\n        let enemyChecker = elements[2]\r\n        ownChecker.style.cssText = `--row:${move[1][0]}; --column:${move[1][1]};`\r\n\r\n        let removeClass = [`row_${move[0][0]}`, `column_${move[0][1]}`]\r\n        let addClass = [`row_${move[1][0]}`, `column_${move[1][1]}`]\r\n        ownChecker.classList.remove(removeClass[0], removeClass[1])\r\n        ownChecker.classList.add(addClass[0], addClass[1])\r\n\r\n        if (activePlayer === 'black' && move[1][0] === 7) {\r\n            ownChecker.classList.add('queen')\r\n        } else if (activePlayer === 'white' && move[1][0] === 0) {\r\n            ownChecker.classList.add('queen')\r\n        }\r\n\r\n        if (enemyChecker) {\r\n            enemyChecker.remove()\r\n        }\r\n    }\r\n\r\n    cloneAllElements() {\r\n        let elements = this.gameData.elements\r\n        for (let key in elements) {\r\n            if (elements[key]) {\r\n                elements[key].classList.remove('active_checker')\r\n                elements[key].classList.remove('hovered')\r\n                elements[key].classList.remove('active_cell')\r\n                let clone = elements[key].cloneNode(true)\r\n                elements[key].replaceWith(clone)\r\n            }\r\n        }\r\n    }\r\n\r\n    cloneCells(activeCells, passiveCells) {\r\n        let elements = [...activeCells, ...passiveCells]\r\n        elements.forEach(el => {\r\n            let clone = el.cloneNode(true)\r\n            el.replaceWith(clone)\r\n        })\r\n    }\r\n\r\n    movePromise = moveThis => {\r\n        return new Promise(function(resolve, reject) {\r\n            let activeCheckers = moveThis.getActiveCheckers()\r\n            activeCheckers.forEach(el => {\r\n                el.classList.add('hovered')\r\n            })\r\n\r\n            activeCheckers.forEach(checker => {\r\n                checker.addEventListener('click', () => {\r\n                    moveThis.addRemoveActiveCheckersClass(checker, activeCheckers)\r\n\r\n                    let activeCells\r\n                    let passiveCells\r\n                    [activeCells, passiveCells] = moveThis.getActiveCells(checker)\r\n                    moveThis.addCellsActiveClass(activeCells)\r\n                    moveThis.removeCellsActiveClass(passiveCells)\r\n                    moveThis.cloneCells(activeCells, passiveCells)\r\n                    moveThis.gameData.filling();\r\n                    [activeCells, ] = moveThis.getActiveCells(checker)\r\n\r\n                    activeCells.forEach(cell => {\r\n                        cell.addEventListener('click', () => {\r\n                            let elements\r\n                            let move\r\n                            [move, elements] = moveThis.getMoveAndElements(checker, cell)\r\n                            moveThis.makeMove(move, elements)\r\n\r\n                            moveThis.cloneAllElements()\r\n                            resolve(move)\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nclass EnemyMove {\r\n    constructor(inputGameData) {\r\n        this.gameData = new _gameData_js__WEBPACK_IMPORTED_MODULE_0__.GameData(inputGameData)\r\n        this.gameData.fillingForEnemyMove()\r\n    }\r\n    makeMove() {\r\n        let ownChecker = this.gameData.elementsForEnemyMove[0]\r\n        let enemyChecker = this.gameData.elementsForEnemyMove[2]\r\n        let move = this.gameData.move['move']\r\n        let playerColor = this.gameData.move['color']\r\n\r\n        ownChecker.style.cssText = `--row:${move[1][0]}; --column:${move[1][1]};`\r\n\r\n        let removeClass = [`row_${move[0][0]}`, `column_${move[0][1]}`]\r\n        let addClass = [`row_${move[1][0]}`, `column_${move[1][1]}`]\r\n        ownChecker.classList.remove(removeClass[0], removeClass[1])\r\n        ownChecker.classList.add(addClass[0], addClass[1])\r\n\r\n        if (playerColor === 'black' && move[1][0] === 7) {\r\n            ownChecker.classList.add('queen')\r\n        } else if (playerColor === 'white' && move[1][0] === 0) {\r\n            ownChecker.classList.add('queen')\r\n        }\r\n\r\n        if (enemyChecker) {\r\n            enemyChecker.remove()\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/service.js?");

/***/ }),

/***/ "./src/scripts/js/showWinner.js":
/*!**************************************!*\
  !*** ./src/scripts/js/showWinner.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showWinner\": () => (/* binding */ showWinner)\n/* harmony export */ });\nfunction showWinner(inputGameData) {\r\n    let winnerColor = inputGameData['winner']\r\n    let winnerUsername = inputGameData['players'][winnerColor]\r\n\r\n    let p = document.createElement('p')\r\n    p.innerHTML= winnerUsername\r\n    let winnerTablet = document.querySelector('.winner_tablet')\r\n\r\n    winnerTablet.classList.remove('hidden')\r\n    winnerTablet.classList.add('visible')\r\n\r\n    winnerTablet.append(p)\r\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/showWinner.js?");

/***/ }),

/***/ "./src/scripts/js/waitingForSecondPlayer.js":
/*!**************************************************!*\
  !*** ./src/scripts/js/waitingForSecondPlayer.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"waitingForSecondPlayer\": () => (/* binding */ waitingForSecondPlayer)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./src/scripts/js/request.js\");\n/* harmony import */ var _gameLoop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameLoop.js */ \"./src/scripts/js/gameLoop.js\");\n\r\n\r\n\r\nasync function waitingForSecondPlayer(url) {\r\n    let currentUrl = url.replace('game', 'waiting_for_second_player')\r\n    let options = {\r\n        method: 'GET',\r\n        url: currentUrl,\r\n        headers: '',\r\n        responseType: 'json',\r\n        params: '',\r\n    }\r\n    while (true) {\r\n        let res = await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.delay)(options)\r\n        if (res && res['msg'] === 'start') {\r\n            break\r\n        }\r\n    }\r\n    let waitingTablet = document.querySelector('.waiting')\r\n    waitingTablet.classList.add('hidden')\r\n    ;(0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_1__.startGameLoop)(url)\r\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/waitingForSecondPlayer.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scripts/js/scripts.js");
/******/ 	
/******/ })()
;