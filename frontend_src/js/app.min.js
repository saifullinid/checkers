/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/js/enemyMoveHandling.js":
/*!*********************************************!*\
  !*** ./src/scripts/js/enemyMoveHandling.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enemyMoveHandling\": () => (/* binding */ enemyMoveHandling)\n/* harmony export */ });\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./service.js */ \"./src/scripts/js/service.js\");\n\n\nfunction enemyMoveHandling(inputGameData) {\n    let move = inputGameData['move']['move']\n    let storageMove = localStorage.getItem('move')\n    let isActivePlayerChanged = inputGameData['is_active_player_changed']\n    let activePlayer = inputGameData['active_player']\n    let activeUsername = inputGameData['players'][activePlayer]\n    let username = localStorage.getItem('username')\n\n    if (move && ((username !== activeUsername) ^ isActivePlayerChanged)) {\n        move = move.join(',')\n        if (storageMove !== move) {\n            let enemyMove = new _service_js__WEBPACK_IMPORTED_MODULE_0__.EnemyMove(inputGameData)\n            enemyMove.makeMove()\n            localStorage.setItem('move', move)\n        }\n    }\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/enemyMoveHandling.js?");

/***/ }),

/***/ "./src/scripts/js/gameData.js":
/*!************************************!*\
  !*** ./src/scripts/js/gameData.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameData\": () => (/* binding */ GameData)\n/* harmony export */ });\nclass GameData {\n\n    constructor(gameData) {\n        this.winner = gameData['winner']\n        this.possibleMoves = gameData['possible_moves']\n        this.activePlayer = gameData['active_player']\n\n        this.possibleMovesDOM = []\n        this.elements = {}\n\n        this.move = gameData['move']\n        this.elementsForEnemyMove = []\n    }\n\n    filling() {\n        this.possibleMoves.forEach(move => {\n            let checkerCoord = move[0].join()\n            let cellCoord = move[1].join()\n\n            let checkerClass = `.row_${move[0][0]}.column_${move[0][1]}`\n            let cellClass = `.cell_row_${move[1][0]}.cell_column_${move[1][1]}`\n\n            let checker = document.querySelector(checkerClass)\n            let cell = document.querySelector(cellClass)\n\n            let enemyCheckerClass = 0\n            let enemyCheckerCoord = 0\n            let enemyChecker = 0\n            if (move[2].length) {\n                enemyCheckerClass = `.row_${move[2][0]}.column_${move[2][1]}`\n                enemyCheckerCoord = move[2].join()\n                enemyChecker = document.querySelector(enemyCheckerClass)\n                this.elements[enemyCheckerCoord] = enemyChecker\n            }\n\n            this.possibleMovesDOM.push([checker, cell, enemyChecker])\n\n            this.elements[checkerCoord] = checker\n            this.elements[cellCoord] = cell\n        })\n    }\n\n    fillingForEnemyMove() {\n        let move = this.move['move']\n\n        let checkerClass = `.row_${move[0][0]}.column_${move[0][1]}`\n        let cellClass = `.cell_row_${move[1][0]}.cell_column_${move[1][1]}`\n\n        let checker = document.querySelector(checkerClass)\n        let cell = document.querySelector(cellClass)\n\n        this.elementsForEnemyMove.push(checker)\n        this.elementsForEnemyMove.push(cell)\n\n        let enemyCheckerClass = 0\n        let enemyChecker = 0\n        if (move[2].length) {\n            enemyCheckerClass = `.row_${move[2][0]}.column_${move[2][1]}`\n            enemyChecker = document.querySelector(enemyCheckerClass)\n            this.elementsForEnemyMove.push(enemyChecker)\n        }\n    }\n}\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/gameData.js?");

/***/ }),

/***/ "./src/scripts/js/gameLoop.js":
/*!************************************!*\
  !*** ./src/scripts/js/gameLoop.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startGameLoop\": () => (/* binding */ startGameLoop)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./src/scripts/js/request.js\");\n/* harmony import */ var _enemyMoveHandling_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemyMoveHandling.js */ \"./src/scripts/js/enemyMoveHandling.js\");\n/* harmony import */ var _ownMoveHandling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ownMoveHandling.js */ \"./src/scripts/js/ownMoveHandling.js\");\n/* harmony import */ var _showWinner_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./showWinner.js */ \"./src/scripts/js/showWinner.js\");\n\n\n\n\n\nfunction startGameLoop(url) {\n    let currentUrl = url.replace('game', 'start')\n    localStorage.setItem('move', '');\n    (async function loop() {\n        let move = ''\n        let method = 'GET';\n        let winner = ''\n\n        while (true) {\n            let options = {\n                method: method,\n                url: currentUrl,\n                headers: '',\n                responseType: 'json',\n                params: move,\n            }\n            let inputGameData = await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.delay)(options)\n\n            ;(0,_enemyMoveHandling_js__WEBPACK_IMPORTED_MODULE_1__.enemyMoveHandling)(inputGameData)\n\n            winner = inputGameData['winner']\n            if (winner) {\n                (0,_showWinner_js__WEBPACK_IMPORTED_MODULE_3__.showWinner)(inputGameData)\n                break\n            }\n\n            move = await (0,_ownMoveHandling_js__WEBPACK_IMPORTED_MODULE_2__.ownMoveHandling)(inputGameData)\n        }\n    })()\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/gameLoop.js?");

/***/ }),

/***/ "./src/scripts/js/getUsername.js":
/*!***************************************!*\
  !*** ./src/scripts/js/getUsername.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUsername\": () => (/* binding */ getUsername)\n/* harmony export */ });\nfunction getUsername() {\n    let loginForm = document.querySelector('.form')\n    loginForm.addEventListener('submit', () => {\n        let formInputUsername = document.getElementById('username')\n        let username = formInputUsername.value\n\n        localStorage.setItem('username', username)\n    })\n}\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/getUsername.js?");

/***/ }),

/***/ "./src/scripts/js/ownMoveHandling.js":
/*!*******************************************!*\
  !*** ./src/scripts/js/ownMoveHandling.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ownMoveHandling\": () => (/* binding */ ownMoveHandling)\n/* harmony export */ });\n/* harmony import */ var _service_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./service.js */ \"./src/scripts/js/service.js\");\n\n\nasync function ownMoveHandling(inputGameData) {\n    let activePlayer = inputGameData['active_player']\n    let activeUsername = inputGameData['players'][activePlayer]\n    let username = localStorage.getItem('username')\n\n    if (username === activeUsername) {\n        let ownMove = new _service_js__WEBPACK_IMPORTED_MODULE_0__.Move(inputGameData)\n        return await ownMove.movePromise(ownMove)\n    } else {\n        return ''\n    }\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/ownMoveHandling.js?");

/***/ }),

/***/ "./src/scripts/js/request.js":
/*!***********************************!*\
  !*** ./src/scripts/js/request.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"delay\": () => (/* binding */ delay)\n/* harmony export */ });\nconst delay = options => {\n    return new Promise(function (resolve, reject) {\n        if (options.params) {\n            options.method = 'POST'\n        } else {\n            options.method = 'GET'\n        }\n        let timeout = 1000\n        if (options.method === 'POST') {\n            timeout = 500\n        }\n        var xhr = new XMLHttpRequest()\n        xhr.open(options.method, options.url)\n        xhr.responseType = 'json'\n        xhr.onload = function() {\n        if (xhr.status >= 200 && xhr.status <= 300) {\n            resolve(xhr.response)\n        } else {\n            reject({\n            status: xhr.status,\n            statusText: xhr.statusText\n            })\n        }\n        }\n        xhr.onerror = function () {\n        reject({\n            status: xhr.status,\n            statusText: xhr.statusText\n        })\n        }\n        if (options.headers) {\n            Object.keys(options.headers).forEach(function (key) {\n                xhr.setRequestHeader(key, options.headers[key])\n            })\n        }\n        var params = JSON.stringify(options.params)\n        setTimeout(() => {\n            xhr.send(params)\n        }, timeout)\n      })\n}\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/request.js?");

/***/ }),

/***/ "./src/scripts/js/scripts.js":
/*!***********************************!*\
  !*** ./src/scripts/js/scripts.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _waitingForSecondPlayer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waitingForSecondPlayer.js */ \"./src/scripts/js/waitingForSecondPlayer.js\");\n/* harmony import */ var _getUsername_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getUsername.js */ \"./src/scripts/js/getUsername.js\");\n\n\n\nlet url = window.location.href\n\nif (url.indexOf('login') !== -1) {\n    (0,_getUsername_js__WEBPACK_IMPORTED_MODULE_1__.getUsername)()\n} else if (url.indexOf('game') !== -1) {\n    (0,_waitingForSecondPlayer_js__WEBPACK_IMPORTED_MODULE_0__.waitingForSecondPlayer)(url)\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://checkers/./src/scripts/js/scripts.js?");

/***/ }),

/***/ "./src/scripts/js/service.js":
/*!***********************************!*\
  !*** ./src/scripts/js/service.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EnemyMove\": () => (/* binding */ EnemyMove),\n/* harmony export */   \"Move\": () => (/* binding */ Move)\n/* harmony export */ });\n/* harmony import */ var _gameData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameData.js */ \"./src/scripts/js/gameData.js\");\n\n\nclass Move {\n    constructor(inputGameData) {\n        this.gameData = new _gameData_js__WEBPACK_IMPORTED_MODULE_0__.GameData(inputGameData)\n        this.gameData.filling()\n    }\n\n    getActiveCheckers() {\n        let checkersSet = new Set()\n        let possibleMovesDOM = this.gameData.possibleMovesDOM\n        possibleMovesDOM.forEach(move => {\n            checkersSet.add(move[0])\n        })\n        return Array.from(checkersSet)\n    }\n\n    addRemoveActiveCheckersClass(checker, activeCheckers) {\n        checker.classList.toggle('active_checker')\n\n        activeCheckers.forEach(el => {\n            if (el !== checker) {\n                el.classList.remove('active_checker')\n            }\n        })\n    }\n\n    getActiveCells(checker) {\n        let possibleMovesDOM = this.gameData.possibleMovesDOM\n        let isActiveClassFound = checker.classList.value.includes('active_checker')\n        let activeCellsArr = []\n        let passiveCellsArr = []\n        possibleMovesDOM.forEach(move => {\n            if (move[0] === checker && isActiveClassFound) {\n                activeCellsArr.push(move[1])\n            } else {\n                passiveCellsArr.push(move[1])\n            }\n        })\n        passiveCellsArr = passiveCellsArr.filter(cell => !activeCellsArr.includes(cell))\n        return [activeCellsArr, passiveCellsArr]\n    }\n\n    addCellsActiveClass(activeCells) {\n        activeCells.forEach(el => {\n            el.classList.add('active_cell')\n        })\n    }\n\n    removeCellsActiveClass(passiveCells) {\n        passiveCells.forEach(el => {\n            el.classList.remove('active_cell')\n        })\n    }\n\n    getEnemyChecker(checker, cell) {\n        let possibleMovesDOM = this.gameData.possibleMovesDOM\n        let enemyChecker = 0\n        possibleMovesDOM.forEach(move => {\n            if (move[0] === checker && move[1] === cell) {\n                enemyChecker = move[2]\n            }\n        })\n        return enemyChecker\n    }\n\n    getMoveAndElements(checker, cell) {\n        let elements = this.gameData.elements\n        let enemyChecker = this.getEnemyChecker(checker, cell)\n        let enemyCoord = []\n        let checkerCoord = []\n        let cellCoord = []\n\n        for (let key in elements) {\n            let element = elements[key]\n            switch(element) {\n                case checker:\n                    checkerCoord = key.split(',').map(str => parseInt(str, 10))\n                    break\n                case cell:\n                    cellCoord = key.split(',').map(str => parseInt(str, 10))\n                    break\n                case enemyChecker:\n                    enemyCoord = key.split(',').map(str => parseInt(str, 10))\n                    break\n            }\n        }\n        return [[checkerCoord, cellCoord, enemyCoord], [checker, cell, enemyChecker]]\n    }\n\n    makeMove(move, elements) {\n        let activePlayer = this.gameData.activePlayer\n        let ownChecker = elements[0]\n        let enemyChecker = elements[2]\n        ownChecker.style.cssText = `--row:${move[1][0]}; --column:${move[1][1]};`\n\n        let removeClass = [`row_${move[0][0]}`, `column_${move[0][1]}`]\n        let addClass = [`row_${move[1][0]}`, `column_${move[1][1]}`]\n        ownChecker.classList.remove(removeClass[0], removeClass[1])\n        ownChecker.classList.add(addClass[0], addClass[1])\n\n        if (activePlayer === 'black' && move[1][0] === 7) {\n            ownChecker.classList.add('queen')\n        } else if (activePlayer === 'white' && move[1][0] === 0) {\n            ownChecker.classList.add('queen')\n        }\n\n        if (enemyChecker) {\n            enemyChecker.remove()\n        }\n    }\n\n    cloneAllElements() {\n        let elements = this.gameData.elements\n        for (let key in elements) {\n            if (elements[key]) {\n                elements[key].classList.remove('active_checker')\n                elements[key].classList.remove('hovered')\n                elements[key].classList.remove('active_cell')\n                let clone = elements[key].cloneNode(true)\n                elements[key].replaceWith(clone)\n            }\n        }\n    }\n\n    cloneCells(activeCells, passiveCells) {\n        let elements = [...activeCells, ...passiveCells]\n        elements.forEach(el => {\n            let clone = el.cloneNode(true)\n            el.replaceWith(clone)\n        })\n    }\n\n    movePromise = moveThis => {\n        return new Promise(function(resolve, reject) {\n            let activeCheckers = moveThis.getActiveCheckers()\n            activeCheckers.forEach(el => {\n                el.classList.add('hovered')\n            })\n\n            activeCheckers.forEach(checker => {\n                checker.addEventListener('click', () => {\n                    moveThis.addRemoveActiveCheckersClass(checker, activeCheckers)\n\n                    let activeCells\n                    let passiveCells\n                    [activeCells, passiveCells] = moveThis.getActiveCells(checker)\n                    moveThis.addCellsActiveClass(activeCells)\n                    moveThis.removeCellsActiveClass(passiveCells)\n                    moveThis.cloneCells(activeCells, passiveCells)\n                    moveThis.gameData.filling();\n                    [activeCells, ] = moveThis.getActiveCells(checker)\n\n                    activeCells.forEach(cell => {\n                        cell.addEventListener('click', () => {\n                            let elements\n                            let move\n                            [move, elements] = moveThis.getMoveAndElements(checker, cell)\n                            moveThis.makeMove(move, elements)\n\n                            moveThis.cloneAllElements()\n                            resolve(move)\n                        })\n                    })\n                })\n            })\n        })\n    }\n}\n\nclass EnemyMove {\n    constructor(inputGameData) {\n        this.gameData = new _gameData_js__WEBPACK_IMPORTED_MODULE_0__.GameData(inputGameData)\n        this.gameData.fillingForEnemyMove()\n    }\n    makeMove() {\n        let ownChecker = this.gameData.elementsForEnemyMove[0]\n        let enemyChecker = this.gameData.elementsForEnemyMove[2]\n        let move = this.gameData.move['move']\n        let playerColor = this.gameData.move['color']\n\n        ownChecker.style.cssText = `--row:${move[1][0]}; --column:${move[1][1]};`\n\n        let removeClass = [`row_${move[0][0]}`, `column_${move[0][1]}`]\n        let addClass = [`row_${move[1][0]}`, `column_${move[1][1]}`]\n        ownChecker.classList.remove(removeClass[0], removeClass[1])\n        ownChecker.classList.add(addClass[0], addClass[1])\n\n        if (playerColor === 'black' && move[1][0] === 7) {\n            ownChecker.classList.add('queen')\n        } else if (playerColor === 'white' && move[1][0] === 0) {\n            ownChecker.classList.add('queen')\n        }\n\n        if (enemyChecker) {\n            enemyChecker.remove()\n        }\n    }\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/service.js?");

/***/ }),

/***/ "./src/scripts/js/showWinner.js":
/*!**************************************!*\
  !*** ./src/scripts/js/showWinner.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showWinner\": () => (/* binding */ showWinner)\n/* harmony export */ });\nfunction showWinner(inputGameData) {\n    let winnerColor = inputGameData['winner']\n    let winnerUsername = inputGameData['players'][winnerColor]\n\n    let p = document.createElement('p')\n    p.innerHTML= winnerUsername\n    let winnerTablet = document.querySelector('.winner_tablet')\n\n    winnerTablet.classList.remove('hidden')\n    winnerTablet.classList.add('visible')\n\n    winnerTablet.append(p)\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/showWinner.js?");

/***/ }),

/***/ "./src/scripts/js/waitingForSecondPlayer.js":
/*!**************************************************!*\
  !*** ./src/scripts/js/waitingForSecondPlayer.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"waitingForSecondPlayer\": () => (/* binding */ waitingForSecondPlayer)\n/* harmony export */ });\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request.js */ \"./src/scripts/js/request.js\");\n/* harmony import */ var _gameLoop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameLoop.js */ \"./src/scripts/js/gameLoop.js\");\n\n\n\nasync function waitingForSecondPlayer(url) {\n    let currentUrl = url.replace('game', 'waiting_for_second_player')\n    let options = {\n        method: 'GET',\n        url: currentUrl,\n        headers: '',\n        responseType: 'json',\n        params: '',\n    }\n    while (true) {\n        let res = await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__.delay)(options)\n        if (res && res['msg'] === 'start') {\n            break\n        }\n    }\n    let waitingTablet = document.querySelector('.waiting')\n    waitingTablet.classList.add('hidden')\n    ;(0,_gameLoop_js__WEBPACK_IMPORTED_MODULE_1__.startGameLoop)(url)\n}\n\n//# sourceURL=webpack://checkers/./src/scripts/js/waitingForSecondPlayer.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scripts/js/scripts.js");
/******/ 	
/******/ })()
;